version: "3.9"

services:
  auth-service:
    image: alexnv67/auth-service
    ports:
      - "5001:5001"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  logic-service:
    image: alexnv67/logic-service
    ports:
      - "5002:5002"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  db-service:
    image: alexnv67/db-service
    ports:
      - "5003:5003"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookmeup
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  kong:
    image: kong:3.4
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
    volumes:
      - ./infrastructure/kong.yml:/etc/kong/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  postgres_data:
  portainer_data:

networks:
  backend:
    driver: overlay
