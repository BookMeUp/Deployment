services:
  auth-service:
    build: ../Authentication-Service
    ports:
      - "5001:5001"
    networks:
      - auth-net
      - db-net

  logic-service:
    build: ../Business-Logic-Service
    ports:
      - "5002:5002"
    networks:
      - logic-net
      - db-net

  db-service:
    build: ../Database-Interaction-Service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5003:5003"
    networks:
      - db-net

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookmeup
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "bookmeup"]
      interval: 5s
      timeout: 3s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - admin-net
      - db-net

  kong:
    image: kong:3.4
    container_name: kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
    volumes:
      - ./infrastructure/kong.yml:/etc/kong/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - auth-net
      - logic-net

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    networks:
      - admin-net

volumes:
  postgres_data:
  portainer_data:

networks:
  auth-net:
    driver: bridge
  logic-net:
    driver: bridge
  db-net:
    driver: bridge
  admin-net:
    driver: bridge
